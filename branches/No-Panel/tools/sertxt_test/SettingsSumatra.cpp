// DON'T EDIT MANUALLY !!!!
// auto-generated by scripts/gen_settings.py !!!!

#include "BaseUtil.h"
#include "SerializeTxt.h"
#include "SettingsSumatra.h"

using namespace sertxt;

FieldMetadata gForwardSearchFieldMetadata[] = {
    { "highlightOffset"      , TYPE_I32,  offsetof(ForwardSearch, highlightOffset), NULL },
    { "highlightWidth"       , TYPE_I32,  offsetof(ForwardSearch, highlightWidth), NULL },
    { "highlightPermanent"   , TYPE_I32,  offsetof(ForwardSearch, highlightPermanent), NULL },
    { "highlightColor"       , TYPE_U32,  offsetof(ForwardSearch, highlightColor), NULL },
    { "enableTeXEnhancements", TYPE_BOOL, offsetof(ForwardSearch, enableTeXEnhancements), NULL },
};

StructMetadata gForwardSearchMetadata = { sizeof(ForwardSearch), 5, &gForwardSearchFieldMetadata[0] };

FieldMetadata gPaddingSettingsFieldMetadata[] = {
    { "top"   , TYPE_U16, offsetof(PaddingSettings, top), NULL },
    { "bottom", TYPE_U16, offsetof(PaddingSettings, bottom), NULL },
    { "left"  , TYPE_U16, offsetof(PaddingSettings, left), NULL },
    { "right" , TYPE_U16, offsetof(PaddingSettings, right), NULL },
    { "spaceX", TYPE_U16, offsetof(PaddingSettings, spaceX), NULL },
    { "spaceY", TYPE_U16, offsetof(PaddingSettings, spaceY), NULL },
};

StructMetadata gPaddingSettingsMetadata = { sizeof(PaddingSettings), 6, &gPaddingSettingsFieldMetadata[0] };

FieldMetadata gRectIntFieldMetadata[] = {
    { "x" , TYPE_I32, offsetof(RectInt, x), NULL },
    { "y" , TYPE_I32, offsetof(RectInt, y), NULL },
    { "dx", TYPE_I32, offsetof(RectInt, dx), NULL },
    { "dy", TYPE_I32, offsetof(RectInt, dy), NULL },
};

StructMetadata gRectIntMetadata = { sizeof(RectInt), 4, &gRectIntFieldMetadata[0] };

FieldMetadata gAdvancedSettingsFieldMetadata[] = {
    { "traditionalEbookUI"  , TYPE_BOOL,       offsetof(AdvancedSettings, traditionalEbookUI), NULL },
    { "escToExit"           , TYPE_BOOL,       offsetof(AdvancedSettings, escToExit), NULL },
    { "textColor"           , TYPE_U32,        offsetof(AdvancedSettings, textColor), NULL },
    { "pageColor"           , TYPE_U32,        offsetof(AdvancedSettings, pageColor), NULL },
    { "mainWindowBackground", TYPE_U32,        offsetof(AdvancedSettings, mainWindowBackground), NULL },
    { "pagePadding"         , TYPE_STRUCT_PTR, offsetof(AdvancedSettings, pagePadding), &gPaddingSettingsMetadata },
    { "forwardSearch"       , TYPE_STRUCT_PTR, offsetof(AdvancedSettings, forwardSearch), &gForwardSearchMetadata },
    { "s"                   , TYPE_STR,        offsetof(AdvancedSettings, s), NULL },
    { "defaultZoom"         , TYPE_FLOAT,      offsetof(AdvancedSettings, defaultZoom), NULL },
    { "ws"                  , TYPE_WSTR,       offsetof(AdvancedSettings, ws), NULL },
};

StructMetadata gAdvancedSettingsMetadata = { sizeof(AdvancedSettings), 10, &gAdvancedSettingsFieldMetadata[0] };

FieldMetadata gBasicSettingsFieldMetadata[] = {
    { "globalPrefsOnly"     , TYPE_BOOL,       offsetof(BasicSettings, globalPrefsOnly), NULL },
    { "currLanguage"        , TYPE_STR,        offsetof(BasicSettings, currLanguage), NULL },
    { "toolbarVisible"      , TYPE_BOOL,       offsetof(BasicSettings, toolbarVisible), NULL },
    { "pdfAssociateDontAsk" , TYPE_BOOL,       offsetof(BasicSettings, pdfAssociateDontAsk), NULL },
    { "pdfAssociateDoIt"    , TYPE_BOOL,       offsetof(BasicSettings, pdfAssociateDoIt), NULL },
    { "checkForUpdates"     , TYPE_BOOL,       offsetof(BasicSettings, checkForUpdates), NULL },
    { "rememberMRUFiles"    , TYPE_BOOL,       offsetof(BasicSettings, rememberMRUFiles), NULL },
    { "useSystemColorScheme", TYPE_BOOL,       offsetof(BasicSettings, useSystemColorScheme), NULL },
    { "inverseSearchCmdLine", TYPE_STR,        offsetof(BasicSettings, inverseSearchCmdLine), NULL },
    { "versionToSkip"       , TYPE_STR,        offsetof(BasicSettings, versionToSkip), NULL },
    { "lastUpdateTime"      , TYPE_STR,        offsetof(BasicSettings, lastUpdateTime), NULL },
    { "defaultDisplayMode"  , TYPE_U16,        offsetof(BasicSettings, defaultDisplayMode), NULL },
    { "defaultZoom"         , TYPE_FLOAT,      offsetof(BasicSettings, defaultZoom), NULL },
    { "windowState"         , TYPE_I32,        offsetof(BasicSettings, windowState), NULL },
    { "windowPos"           , TYPE_STRUCT_PTR, offsetof(BasicSettings, windowPos), &gRectIntMetadata },
    { "tocVisible"          , TYPE_BOOL,       offsetof(BasicSettings, tocVisible), NULL },
    { "favVisible"          , TYPE_BOOL,       offsetof(BasicSettings, favVisible), NULL },
    { "sidebarDx"           , TYPE_I32,        offsetof(BasicSettings, sidebarDx), NULL },
    { "tocDy"               , TYPE_I32,        offsetof(BasicSettings, tocDy), NULL },
    { "showStartPage"       , TYPE_BOOL,       offsetof(BasicSettings, showStartPage), NULL },
    { "openCountWeek"       , TYPE_I32,        offsetof(BasicSettings, openCountWeek), NULL },
    { "lastPrefUpdate"      , TYPE_U64,        offsetof(BasicSettings, lastPrefUpdate), NULL },
};

StructMetadata gBasicSettingsMetadata = { sizeof(BasicSettings), 22, &gBasicSettingsFieldMetadata[0] };

FieldMetadata gSettingsFieldMetadata[] = {
    { "basic"   , TYPE_STRUCT_PTR, offsetof(Settings, basic), &gBasicSettingsMetadata },
    { "advanced", TYPE_STRUCT_PTR, offsetof(Settings, advanced), &gAdvancedSettingsMetadata },
};

StructMetadata gSettingsMetadata = { sizeof(Settings), 2, &gSettingsFieldMetadata[0] };



Settings *DeserializeSettings(const uint8_t *data, int dataLen, bool *usedDefaultOut)
{
    void *res = NULL;
    res = Deserialize(data, dataLen, SettingsVersion, &gSettingsMetadata);
    if (res) {
        *usedDefaultOut = false;
        return (Settings*)res;
    }
    res = Deserialize(NULL, 0, SettingsVersion, &gSettingsMetadata);
    CrashAlwaysIf(!res);
    *usedDefaultOut = true;
    return (Settings*)res;
}

uint8_t *SerializeSettings(Settings *val, int *dataLenOut)
{
    return Serialize((const uint8_t*)val, SettingsVersion, &gSettingsMetadata, dataLenOut);
}

void FreeSettings(Settings *val)
{
    FreeStruct((uint8_t*)val, &gSettingsMetadata);
}


