// DON'T EDIT MANUALLY !!!!
// auto-generated by scripts/gen_settings.py !!!!

#ifndef SettingsSumatra_h
#define SettingsSumatra_h

struct ForwardSearch {
    int32_t     highlightOffset;
    int32_t     highlightWidth;
    int32_t     highlightPermanent;
    uint32_t    highlightColor;
    bool        enableTexEnhancements;
};

struct PaddingSettings {
    uint16_t    top;
    uint16_t    bottom;
    uint16_t    left;
    uint16_t    right;
    uint16_t    spaceX;
    uint16_t    spaceY;
};

struct RectInt {
    int32_t    x;
    int32_t    y;
    int32_t    dx;
    int32_t    dy;
};

struct AdvancedSettings {
    bool                 traditionalEbookUI;
    bool                 escToExit;
    uint32_t             textColor;
    uint32_t             pageColor;
    uint32_t             mainWindowBackground;
    PaddingSettings *    pagePadding;
    ForwardSearch *      forwardSearch;
    const char *         s;
    float                defaultZoom;
    const WCHAR *        ws;
};

struct BasicSettings {
    bool            globalPrefsOnly;
    const char *    currLanguage;
    bool            toolbarVisible;
    bool            pdfAssociateDontAsk;
    bool            pdfAssociateDoIt;
    bool            checkForUpdates;
    bool            rememberMruFiles;
    bool            useSystemColorScheme;
    const char *    inverseSearchCmdLine;
    const char *    versionToSkip;
    const char *    lastUpdateTime;
    uint16_t        defaultDisplayMode;
    float           defaultZoom;
    int32_t         windowState;
    RectInt *       windowPos;
    bool            tocVisible;
    bool            favVisible;
    int32_t         sidebarDx;
    int32_t         tocDy;
    bool            showStartPage;
    int32_t         openCountWeek;
    uint64_t        lastPrefUpdate;
};

struct Settings {
    BasicSettings *       basic;
    AdvancedSettings *    advanced;
};

#define SettingsVersion "2.3"

Settings *DeserializeSettings(const uint8_t *data, int dataLen, bool *usedDefaultOut);
uint8_t *SerializeSettings(Settings *, int *dataLenOut);
void FreeSettings(Settings *);

#endif
